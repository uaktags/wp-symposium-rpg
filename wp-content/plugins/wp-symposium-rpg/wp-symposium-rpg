<?php
/*
   Plugin Name: WP Symposium RPG
   Plugin URI: http://wordpress.org/extend/plugins/wp-symposium-rpg/
   Version: 0.1
   Author: <a href="http://tagsolutions.tk">Tim G.</a>
   Description: RPG Elements added to WPS
   Text Domain: wp-symposium-rpg
   License: GPL3
  */


	//////////////////////////////////
	// Run initialization
	/////////////////////////////////

	/*
	 * Don't start on every page, the plugin page is enough.
	 */
	 if(is_admin()){
	    add_action('admin_init', 'RegisterSettings');
		if ( ! empty ( $GLOBALS['pagenow'] ) && 'plugins.php' === $GLOBALS['pagenow'] )
			add_action( 'admin_notices', 'WpSymposiumRPG_check_admin_notices', 0 );

		$wps_options_pages = array(
			'symposium_rpg_options',
			'symposium_options',
			'symposium_profile', 
			'wp-symposium/plus_admin.php',
			'symposium_forum',
			'__wps__mail_menu',
			'__wps__members_menu',
			'wp-symposium/groups_admin.php',
			'wp-symposium/gallery_admin.php',
			'wp-symposium/news_admin.php',
			'wp-symposium/symposium_bar.php',
			'wp-symposium/events_admin.php',
			'wp-symposium/__wps__mobile_.php',
			'wp-symposium/mailinglist_admin.php',
			'wp-symposium/lounge_admin.php');

		if ( ! empty ( $GLOBALS['pagenow'] ) && 'admin.php' === $GLOBALS['pagenow'] && in_array($_GET['page'], $wps_options_pages) )
			add_action('admin_footer', 'WpSymposiumRPG_options_page_hack');
	}

	/**
	 * Test current system for the features the plugin needs.
	 *
	 * @return array Errors or empty array
	 */
	function WpSymposiumRPG_check_plugin_requirements()
	{
		$errors = array ();
		global $wpdb;
		$wpdb->show_errors();
		if ( !defined('WPS_WL') ) {
			$errors[] = "You must install and activate WP-Symposium before activating
				this plugin!";
		}else{
			if (  get_option(WPS_OPTIONS_PREFIX.'_rpg_installed') != 1) {
				$sql = "ALTER TABLE  `".$wpdb->prefix."symposium_usermeta` ";
				$sql .= "ADD  `hp` INT NOT NULL DEFAULT  '100', ";
				$sql .= "ADD  `xp` INT NOT NULL DEFAULT  '0', ";
				$sql .= "ADD  `strength` INT NOT NULL DEFAULT  '5', ";
				$sql .= "ADD  `defense` INT NOT NULL DEFAULT  '5', ";
				$sql .= "ADD  `level` INT NOT NULL DEFAULT  '1'";
				if ($wpdb->query( $sql ) != FALSE){
					update_option(WPS_OPTIONS_PREFIX.'_rpg_installed', "1");
				} else {
					$errors[] = "You had an error occur!<br />";
					$errors[] =  $wpdb->last_error;
				}
				
			}
		}
		return $errors;

	}

	/**
	 * Call WpSymposiumRPG_check_plugin_requirements() and deactivate this plugin if there are error.
	 *
	 * @wp-hook admin_notices
	 * @return  void
	 */
	function WpSymposiumRPG_check_admin_notices()
	{
		$errors = WpSymposiumRPG_check_plugin_requirements();
		if ( empty ( $errors ) )
			return;
		
		
		// Suppress "Plugin activated" notice.
		unset( $_GET['activate'] );

		// this plugin's name
		$name = get_file_data( __FILE__, array ( 'Plugin Name' ), 'plugin' );

		printf(
			'<div class="error"><p>%1$s</p>
			<p><i>%2$s</i> has been deactivated.</p></div>',
			join( '</p><p>', $errors ),
			$name[0]
		);
		deactivate_plugins( plugin_basename( __FILE__ ) );
	}

	function WpSymposiumRPG_on_activation()
{
    if ( ! current_user_can( 'activate_plugins' ) )
        return;
    $plugin = isset( $_REQUEST['plugin'] ) ? $_REQUEST['plugin'] : '';
    check_admin_referer( "activate-plugin_{$plugin}" );

    # Uncomment the following line to see the function in action
    # exit( var_dump( $_GET ) );
}

	function WpSymposiumRPG_on_deactivation()
	{
		if ( ! current_user_can( 'activate_plugins' ) )
			return;
		$plugin = isset( $_REQUEST['plugin'] ) ? $_REQUEST['plugin'] : '';
		check_admin_referer( "deactivate-plugin_{$plugin}" );

		# Uncomment the following line to see the function in action
		# exit( var_dump( $_GET ) );
	}

	function WpSymposiumRPG_on_uninstall()
	{
		if ( ! current_user_can( 'activate_plugins' ) )
			return;
		check_admin_referer( 'bulk-plugins' );

		// Important: Check if the file is the one
		// that was registered during the uninstall hook.
		if ( __FILE__ != WP_UNINSTALL_PLUGIN )
			return;

		# Uncomment the following line to see the function in action
		# exit( var_dump( $_GET ) );
		$sql = "ALTER TABLE  `".$wpdb->prefix."symposium_usermeta` ";
		$sql .= "DROP  `hp, ";
		$sql .= "DROP  `xp`, ";
		$sql .= "DROP  `strength`, ";
		$sql .= "DROP  `defense`, ";
		$sql .= "DROP  `level`";
		if ($wpdb->query( $sql ) != FALSE){
			update_option(WPS_OPTIONS_PREFIX.'_rpg_installed', "0");
		} else {
			$errors[] = "You had an error occur!<br />";
			$errors[] =  $wpdb->last_error;
		}
	}

		
	function RegisterSettings()
	{
		// Add options to database if they don't already exist
		add_option(WPS_OPTIONS_PREFIX.'_rpg_installed', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_point', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_thread', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_reply', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_profile_status', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_comment_reply', "", "", "yes");
		add_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_like', "", "", "yes");

		// Register settings that this form is allowed to update
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_installed');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_point');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_new_thread');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_new_reply');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_profile_status');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_new_comment_reply');
		register_setting('rpg_settings', WPS_OPTIONS_PREFIX.'_rpg_bonus_like');
	}
	//////////////////////////////////
	// End initialization
	/////////////////////////////////
	
	//////////////////////////////////
	// Start Options Page
	/////////////////////////////////
	
	/*
	 * Options Page Hack
	 * Adds Link to Admin->WPS->Options
	*/
	function WpSymposiumRPG_options_page_hack (){
		if($_GET['page'] == "symposium_rpg_options")
			$active = "active";
		else
			$active = "inactive";
		
		echo "<script type='text/javascript' src='" . plugins_url('/script.js?value='.$active, __FILE__)."'></script>";
		//echo "<script type='text/javascirpt'>hack_wps_option_menu();</script>";
	}

	/*
	 * Options Page
	 * Actual WPSymposiumRPG Options Page
	*/
	function symposium_rpg_options() {
		global $wpdb, $current_user; 
		include_once('wp-symposium-rpg-admin.php');
	}

	/*
	 * Creates Menu Page
	*/
	function add_rpg_to_admin_menu()
	{
		$hidden = get_option(WPS_OPTIONS_PREFIX.'_long_menu') == "on" ? '_hidden': '';
		add_submenu_page( 'symposium_debug'.$hidden, __('Symposium RPG', WPS_TEXT_DOMAIN), __('Symposium RPG', WPS_TEXT_DOMAIN), 'manage_options', 'symposium_rpg_options', 'symposium_rpg_options' );
	}

	
	//////////////////////////////////
	// End Options Page
	//////////////////////////////////
	
	//////////////////////////////////
	// Actions and Hooks
	//////////////////////////////////
	register_activation_hook(   __FILE__, 'WpSymposiumRPG_on_activation' );
	register_deactivation_hook( __FILE__, 'WpSymposiumRPG_on_deactivation' );
	register_uninstall_hook(    __FILE__, 'WpSymposiumRPG_on_uninstall' );
	
	add_action('__wps__admin_menu_hook', 'add_rpg_to_admin_menu');
	add_action('symposium_bonus_increment_hook', 'symposium_bonus_increment', 10,2);
	
	add_action('symposium_profile_newpost_hook', 'symposium_hook_hack_addStatus');
	function symposium_hook_hack_addStatus(){
		symposium_bonus_increment( $current_user->ID, 'profile-status' );
		return true;
	}
	add_action('symposium_profile_like_hook', 'symposium_hook_hack_like');
	function symposium_hook_hack_like(){
		symposium_bonus_increment( $current_user->ID, 'like' );
		return true;
	}
	add_action('__wps__forum_newtopic_hook', 'symposium_hook_hack_newthread');
	function symposium_hook_hack_newthread(){
		symposium_bonus_increment( $current_user->ID, 'new_thread' );
		return true;
	}
	add_action('symposium_forum_reply_hook', 'symposium_hook_hack_newreply');
	function symposium_hook_hack_newreply(){
		symposium_bonus_increment( $current_user->ID, 'new_reply' );
		return true;
	}
	add_action('symposium_forum_replycomment_hook', 'symposium_hook_hack_newcommentreply');
	function symposium_hook_hack_newcommentreply(){
		symposium_bonus_increment( $current_user->ID, 'new_comment_reply' );
		return true;
	}
	//////////////////////////////////
	// End Actions And Hooks
	//////////////////////////////////
	
	//////////////////////////////////
	// RPG Functions
	//////////////////////////////////
	function symposium_bonus_increment($arg1, $arg2){
		global $wpdb, $current_user;
				/* Argument2 holds the name of the action. Possible values:
				'new_thread' : When a new thread is created 
				'new_reply' : When a new reply is created on thread
				'profile-status' : When a new Profile Status is made
				'new_comment_reply' : When a new comment on a Forum Reply is made (?)
				'like' : When a new like is generated
				/
				/
				These values should cordinate with the settings db name
				*/
			if ( get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_point') == "on"){
				$bonus = 0;
				switch ( $arg2 ){
					case 'new_thread':
						$bonus = get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_thread');
						break;
					case 'new_reply':
						$bonus = get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_reply');
						break;
					case 'profile-status':
						$bonus = get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_profile_status');
						break;
					case 'new_comment_reply':
						$bonus = get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_new_comment_reply');
						break;
					case 'like':
						$bonus = get_option(WPS_OPTIONS_PREFIX.'_rpg_bonus_like');
						break;
				}
				//$sql = "SELECT name, value FROM ".$wpdb->prefix."rpg_settings WHERE name = %s";
				//$new_topic_bonus = $wpdb->get_row($wpdb->prepare($sql, $arg2));
				$sql = "SELECT xp, hp, level FROM ".$wpdb->base_prefix."symposium_usermeta WHERE uid = %d";
				$wpsrpg = $wpdb->get_row($wpdb->prepare($sql, $arg1));
				$newhp = $wpsrpg->xp + $bonus;
				$sql = "UPDATE ".$wpdb->prefix."symposium_usermeta SET xp=%d WHERE uid = %d";
				$wpdb->query( $wpdb->prepare( $sql, $newhp, $arg1));
				//exit;
			}
	}
	
	function __WPS__RPG__Get_Forum_Stats($uid){
		global $wpdb, $current_user; 
		if ( isset ( $uid ) ) {
			$sql = "SELECT xp, hp, level FROM ".$wpdb->base_prefix."symposium_usermeta WHERE uid = %d";
			if ( $wpsrpg = $wpdb->get_row($wpdb->prepare($sql, $uid)) != null){
				$wpsrpg = $wpdb->get_row($wpdb->prepare($sql, $uid));
				$html = "<div name='WPS-RPG'>";
				$html .= "HP: " . $wpsrpg->hp . "<br />";
				$html .= "XP: " . $wpsrpg->xp . "<br />";
				$html .= "Level: " . $wpsrpg->level . "<br />";
				if ($uid != $current_user->ID && WpSymposiumRPG_is_playing($current_user->ID)){
					$html .= "<form id='attack' action='" /*. plugins_url('/ajax/attack_functions.php', __FILE__) */ . "' method='post'>";
					$html .= "<input type='hidden' name='action' value='attack' />";
					$html .= "<input type='hidden' name='enemy-id' value='".$uid."' />";
					$html .= "<input type='hidden' name='attacker-id' value='".$current_user->ID."' />";
					$html .= "<input type='submit' name='Submit' class='button-primary' value='".__('Attack', WPS_TEXT_DOMAIN)."'	/>";
					$html .= "</form>";
				}
				$html .= "</div>";
			} else {
				$html = "<div name='WPS-RPG'>";
				$html .= "Not Playing RPG";
				$html .= "</div>";
			}
			return $html;
		}
	}
	function WpSymposiumRPG_is_playing($uid){
		global $wpdb, $current_user; 
		$sql = "SELECT xp, hp, level FROM ".$wpdb->base_prefix."symposium_usermeta WHERE uid = %d";
		if ( $wpsrpg = $wpdb->get_row($wpdb->prepare($sql, $uid)) != null){
		 return true;
		 exit;
		 }
		 return false;
	}
	if( ! is_admin() ){
		add_action('wp_footer', '__WPS__RPG__js_for_attacks');
		if(isset($_POST['action']) && $_POST['action'] == 'attack'){
			//WpSymposiumRPG_Attack($_POST['attacker-id'], $_POST['enemy-id']);
		}
	}
	
	function __WPS__RPG__js_for_attacks(){
		echo '<script type="text/javascript">';
		echo '<!--//--><![CDATA[//><!--';
		echo '$(document).ready(function() {';
		echo "$('form#attack').submit(function() {";
		echo "$('form#attack .error').remove();";
		echo "var hasError = false;";
		echo "$('.requiredField').each(function() {";
		echo "		if($.trim($(this).val()) == '') {";
		echo "			var labelText = $(this).prev('label').text();";
		echo "				$(this).parent().append('<span class=";
		echo '"error"';
		echo ">Your forgot to enter your '+labelText+'.</span>');";
		echo "$(this).addClass('inputError');";
		echo "hasError = true;";
		echo "} else if($(this).hasClass('email')) {";
		echo "var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;";
		echo "if(!emailReg.test($.trim($(this).val()))) {";
		echo "var labelText = $(this).prev('label').text();";
		echo "$(this).parent().append('<span class=error>Sorry! You\'ve entered an invalid '+labelText+'.</span>');";
		echo "$(this).addClass('inputError');";
		echo "hasError = true;";
		echo "}";
		echo "}";
				echo"});";
				echo"return false;";	
			echo "});});//-->!]]>";
			echo "</script>";
	
	}
	
	function WpSymposiumRPG_Attack($attacker, $defender){
		
	}
	//////////////////////////////////
	// End RPG Functions
	//////////////////////////////////
